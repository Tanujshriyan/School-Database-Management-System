package Source;

import static Source.Student_Form.con;
import static Source.Student_Form.ps;
import static Source.Window.DB_URL;
import static Source.Window.Pass;
import static Source.Window.User;
import com.formdev.flatlaf.FlatDarkLaf;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author tanuj
 */
public class Edit_Student_Form extends javax.swing.JFrame {

    /**
     * Creates new form Edit_Student_Form
     */
    public Edit_Student_Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Gender = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Address = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        Addhar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Class = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        P_Phone = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        jLabel13 = new javax.swing.JLabel();
        Father = new javax.swing.JTextField();
        Mother = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        Blood = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        F_Name = new javax.swing.JTextField();
        M_Name = new javax.swing.JTextField();
        L_Name = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Class1 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        Student = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setForeground(new java.awt.Color(60, 63, 65));
        jPanel1.setAutoscrolls(true);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Student Editing Form");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 27, -1, -1));

        jLabel2.setText("Please fill the form very carefully");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 65, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 380, 10));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Aadhar Card Number");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 570, 150, -1));

        jLabel4.setText("First Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 233, -1, -1));

        jLabel5.setText("Middle Name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 233, -1, -1));

        jLabel6.setText("Last Name");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 233, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Student Name");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 180, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Gender");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 100, -1));

        Gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        Gender.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                GenderItemStateChanged(evt);
            }
        });
        Gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderActionPerformed(evt);
            }
        });
        jPanel1.add(Gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 100, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Father's Name");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 330, 170, -1));

        Address.setColumns(20);
        Address.setRows(5);
        Address.setWrapStyleWord(true);
        jScrollPane1.setViewportView(Address);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 500, 330, 60));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Class");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 70, -1));
        jPanel1.add(Addhar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 600, 140, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Address");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 470, 95, -1));

        Class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Class 8", "Class 9", "Class 10", " " }));
        jPanel1.add(Class, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 100, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Birth Date");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 260, 95, -1));
        jPanel1.add(P_Phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 600, 160, -1));

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });
        jPanel1.add(Submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 640, -1, -1));

        Exit.setText("Close");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jPanel1.add(Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 640, -1, -1));
        jPanel1.add(datePicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 290, 210, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Parent's Phone Number");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 570, 170, -1));
        jPanel1.add(Father, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 360, 210, -1));
        jPanel1.add(Mother, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 430, 210, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Mother's Name");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 290, 170, -1));

        Blood.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A (A+)", "A (A-)", "B (B+)", "B (B-)", "O (O+)", "O (O-)", "AB (AB+)", "AB (AB-)" }));
        Blood.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                BloodItemStateChanged(evt);
            }
        });
        Blood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BloodActionPerformed(evt);
            }
        });
        jPanel1.add(Blood, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, 100, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Blood Group");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 100, -1));
        jPanel1.add(F_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 210, 90, -1));
        jPanel1.add(M_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 90, -1));
        jPanel1.add(L_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 90, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 380, 10));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("Select the Student");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 100, -1, -1));

        jLabel17.setText("Class :");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 143, -1, -1));

        Class1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select the Class", "Class 8", "Class 9", "Class 10" }));
        Class1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Class1ActionPerformed(evt);
            }
        });
        jPanel1.add(Class1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        jLabel22.setText("Student :");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 143, -1, -1));

        Student.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student" }));
        Student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentActionPerformed(evt);
            }
        });
        jPanel1.add(Student, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 100, -1));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Blood Group");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 410, 100, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Mother's Name");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 400, 170, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 690));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void GenderItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_GenderItemStateChanged

    }//GEN-LAST:event_GenderItemStateChanged

    private void GenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderActionPerformed

    }//GEN-LAST:event_GenderActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // Textbox inputs transferred to variables
        String Value2 = Student.getSelectedItem().toString();
        String Name = F_Name.getText() +" "+M_Name.getText()+" "+L_Name.getText();
        LocalDate date = datePicker1.getDate();
        String Gen = Gender.getSelectedItem().toString();
        String Phone = P_Phone.getText();
        String Dad = Father.getText();
        String Mom = Mother.getText();
        String Addh = Addhar.getText();
        String Addr = Address.getText();
        String Clas = Class.getSelectedItem().toString();
        String BloodG = Blood.getSelectedItem().toString();
        // Checks if any value is empty
        if(F_Name.equals("") || M_Name.equals("") || L_Name.equals("") || date == null  || Gen.equals("") || Phone.equals("") ||
            Dad.equals("") || Mom.equals("") || Addh.equals("") || Addr.equals("") || Clas.equals("") || BloodG.equals("")){
            // Shows a error message
            JOptionPane.showMessageDialog(null,"Some informations are missing","Error",JOptionPane.ERROR_MESSAGE);
        }else{// IF all values are entered
            String dob = date.toString();
            switch (Clas) {
                case "Class 8":
                try {

                    con = DriverManager.getConnection(DB_URL,User,Pass);
                    //Inserting into table
                    ps = con.prepareStatement("update class_8 set Name = ?, Dob = ?, Gender = ?, Father = ?, Mother = ?, Phone = ?, Aadhar = ?, Address = ?, BloodGroup = ? where Name = ?");
                    ps.setString(1, Name); //Name
                    ps.setString(2, dob);// Date-of-Birth
                    ps.setString(3, Gen);// Gender
                    ps.setString(4, Dad);// Father's Name
                    ps.setString(5, Mom);// Mother's Name
                    ps.setString(6, Phone);// Parent's Phone Number
                    ps.setString(7, Addh);// Aadhar Number
                    ps.setString(8, Addr);// Address
                    ps.setString(9, BloodG);// Blood Group
                    ps.setString(10, Value2);// Selected Student
                    //Executing the statement
                    ps.executeUpdate(); // Update the table
                    JOptionPane.showMessageDialog(null,"Student successfully updated");
                    dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(Student_Form.class.getName()).log(Level.SEVERE, null, ex);
                }   break;
                case "Class 9":
                try {
                    con = DriverManager.getConnection(DB_URL,User,Pass);
                    //Inserting into table
                    ps = con.prepareStatement("update class_8 set Name = ?, Dob = ?, Gender = ?, Father = ?, Mother = ?, Phone = ?, Aadhar = ?, Address = ?, BloodGroup = ? where Name = ?");
                    ps.setString(1,Name); //Name
                    ps.setString(2, dob);// Date-of-Birth
                    ps.setString(3, Gen);// Gender
                    ps.setString(4, Dad);// Father's Name
                    ps.setString(5, Mom);// Mother's Name
                    ps.setString(6, Phone);// Parent's Phone Number
                    ps.setString(7, Addh);// Aadhar Number
                    ps.setString(8, Addr);// Address
                    ps.setString(9, BloodG);// Blood Group
                    ps.setString(10, Value2);// Selected Student
                    //Executing the statement
                    ps.executeUpdate(); // Update the table
                    JOptionPane.showMessageDialog(null,"Student successfully updated");
                    dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(Student_Form.class.getName()).log(Level.SEVERE, null, ex);
                }   break;
                case "Class 10":
                try {
                    con = DriverManager.getConnection(DB_URL,User,Pass);
                    //Inserting into table
                    ps = con.prepareStatement("update class_8 set Name = ?, Dob = ?, Gender = ?, Father = ?, Mother = ?, Phone = ?, Aadhar = ?, Address = ?, BloodGroup = ? where Name = ?");
                    ps.setString(1,Name); //Name
                    ps.setString(2, dob);// Date-of-Birth
                    ps.setString(3, Gen);// Gender
                    ps.setString(4, Dad);// Father's Name
                    ps.setString(5, Mom);// Mother's Name
                    ps.setString(6, Phone);// Parent's Phone Number
                    ps.setString(7, Addh);// Aadhar Number
                    ps.setString(8, Addr);// Address
                    ps.setString(9, BloodG);// Blood Group
                    ps.setString(10, Value2);// Selected Student
                    //Executing the statement
                    ps.executeUpdate(); // Update the table
                    JOptionPane.showMessageDialog(null,"Student successfully updated");
                    dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(Student_Form.class.getName()).log(Level.SEVERE, null, ex);
                }   break;
                default:
                JOptionPane.showMessageDialog(null,"Phone Number or Aadhar Number isn't valid","Error",JOptionPane.ERROR_MESSAGE);
                break;
            }
        }

    }//GEN-LAST:event_SubmitActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_ExitActionPerformed

    private void BloodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BloodItemStateChanged

    }//GEN-LAST:event_BloodItemStateChanged

    private void BloodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BloodActionPerformed

    }//GEN-LAST:event_BloodActionPerformed

    private void Class1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Class1ActionPerformed
        String value1 = Class.getSelectedItem().toString();
        if(value1.equals("Class 8")){
            try {
                con = DriverManager.getConnection(DB_URL,User,Pass);
                Statement st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                String sql = "select Name from class_8";
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    String name2 = rs.getString("Name");
                    Student.addItem(name2);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Couldn't retrieve the data! Check the connection and try again!","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        if(value1.equals("Class 9")){
            try {
                con = DriverManager.getConnection(DB_URL,User,Pass);
                Statement st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                String sql = "select Name from class_9";
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    String name2 = rs.getString("Name");
                    Student.addItem(name2);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Couldn't retrieve the data! Check the connection and try again!","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        if(value1.equals("Class 10")){
            try {
                con = DriverManager.getConnection(DB_URL,User,Pass);
                Statement st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                String sql = "select Name from class_10";
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    String name2 = rs.getString("Name");
                    Student.addItem(name2);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Couldn't retrieve the data! Check the connection and try again!","Error",JOptionPane.ERROR_MESSAGE);
            } }
    }//GEN-LAST:event_Class1ActionPerformed

    private void StudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentActionPerformed
        String Value2 = Student.getSelectedItem().toString();
        String value1 = Class.getSelectedItem().toString();
        try{
            con = DriverManager.getConnection(DB_URL,User,Pass);
            if(value1.equals("Class 8")){
                ps = con.prepareStatement("select Name, Dob, Gender, Father, Mother, Phone, Aadhar, Address, BloodGroup from class_8 where Name=?");
                ps.setString(1, Value2);
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    String str1 = rs.getString("Name");
                    String[] newStr = str1.split("\\s+");
                    F_Name.setText(newStr[0]);
                    M_Name.setText(newStr[1]);
                    L_Name.setText(newStr[2]);
                    Class1.setSelectedItem(value1);
                    Gender.setSelectedItem(rs.getString("Gender"));
                    Father.setText(rs.getString("Father"));
                    Mother.setText(rs.getString("Mother"));
                    P_Phone.setText(rs.getString("Phone"));
                    Addhar.setText(rs.getString("Aadhar"));
                    Address.setText(rs.getString("Address"));
                    Blood.setSelectedItem(rs.getString("BloodGroup"));
                    String str = rs.getString("Dob");
                    LocalDate dateTime = LocalDate.parse(str);
                    datePicker1.setDate(dateTime); 
                }
            }
            if(value1.equals("Class 9")){
                ps = con.prepareStatement("select Name, Dob, Gender, Father, Mother, Phone, Aadhar, Address, BloodGroup from class_9 where Name=?");
                ps.setString(1, Value2);
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    String str1 = rs.getString("Name");
                    String[] newStr = str1.split("\\s+");
                    F_Name.setText(newStr[0]);
                    M_Name.setText(newStr[1]);
                    L_Name.setText(newStr[2]);
                    String str = rs.getString("Dob");
                    LocalDate dateTime = LocalDate.parse(str);
                    datePicker1.setDate(dateTime); 
                    Class1.setSelectedItem(value1);
                    Gender.setSelectedItem(rs.getString("Gender"));
                    Father.setText(rs.getString("Father"));
                    Mother.setText(rs.getString("Mother"));
                    P_Phone.setText(rs.getString("Phone"));
                    Addhar.setText(rs.getString("Aadhar"));
                    Address.setText(rs.getString("Address"));
                    Blood.setSelectedItem(rs.getString("BloodGroup"));
                }
            }
            if(value1.equals("Class 10")){
                ps = con.prepareStatement("select Name, Dob, Gender, Father, Mother, Phone, Aadhar, Address, BloodGroup from class_10 where Name=?");
                ps.setString(1, Value2);
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    String str1 = rs.getString("Name");
                    String[] newStr = str1.split("\\s+");
                    F_Name.setText(newStr[0]);
                    M_Name.setText(newStr[1]);
                    L_Name.setText(newStr[2]);
                    String str = rs.getString("Dob");
                    LocalDate dateTime = LocalDate.parse(str);
                    datePicker1.setDate(dateTime); 
                    Class1.setSelectedItem(value1);
                    Gender.setSelectedItem(rs.getString("Gender"));
                    Father.setText(rs.getString("Father"));
                    Mother.setText(rs.getString("Mother"));
                    P_Phone.setText(rs.getString("Phone"));
                    Addhar.setText(rs.getString("Aadhar"));
                    Address.setText(rs.getString("Address"));
                    Blood.setSelectedItem(rs.getString("BloodGroup"));
                }
            }

        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Couldn't retrieve the data! Check the connection and try again!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_StudentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatDarkLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edit_Student_Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Addhar;
    private javax.swing.JTextArea Address;
    private javax.swing.JComboBox<String> Blood;
    private javax.swing.JComboBox<String> Class;
    private javax.swing.JComboBox<String> Class1;
    private javax.swing.JButton Exit;
    private javax.swing.JTextField F_Name;
    private javax.swing.JTextField Father;
    private javax.swing.JComboBox<String> Gender;
    private javax.swing.JTextField L_Name;
    private javax.swing.JTextField M_Name;
    private javax.swing.JTextField Mother;
    private javax.swing.JTextField P_Phone;
    private javax.swing.JComboBox<String> Student;
    private javax.swing.JButton Submit;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
